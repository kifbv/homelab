name: Build Raspberry Pi 5 Debian Image

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Name for the output image'
        required: false
        default: 'rpi5-k8s-debian'
      kubernetes_version:
        description: 'Kubernetes version to install'
        required: false
        default: 'v1.33'
      pod_subnet:
        description: 'CIDR for Kubernetes pod network'
        required: false
        default: '10.244.64.0/18'
      service_subnet:
        description: 'CIDR for Kubernetes service network'
        required: false
        default: '10.244.0.0/20'
  push:
    branches: [ main ]
    paths:
      - 'scripts/**'
      - 'userpatches/**'
      - '.github/workflows/build-rpi5-image.yml'

env:
  IMAGE_SIZE: "4G"
  DEBIAN_RELEASE: "bookworm"
  DEBIAN_MIRROR: "http://deb.debian.org/debian"
  RPI_FIRMWARE_REPO: "https://github.com/raspberrypi/firmware.git"

jobs:
  build-image:
    runs-on: ubuntu-24.04-arm64
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Free up disk space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        df -h
        
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          coreutils quilt parted qemu-user-static debootstrap zerofree zip \
          dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file \
          git curl bc gpg pigz xxd arch-test bmap-tools fdisk kpartx \
          binfmt-support systemd-container
          
    - name: Enable cross-architecture support
      run: |
        sudo systemctl enable systemd-binfmt
        sudo systemctl start systemd-binfmt
        sudo update-binfmts --enable qemu-aarch64
        
    - name: Create build environment
      run: |
        sudo mkdir -p /build/{image,mnt,firmware}
        sudo chown -R $USER:$USER /build
        
    - name: Download Raspberry Pi firmware
      run: |
        cd /build/firmware
        git clone --depth 1 ${{ env.RPI_FIRMWARE_REPO }} .
        
    - name: Build Debian image
      env:
        IMAGE_NAME: ${{ github.event.inputs.image_name || 'rpi5-k8s-debian' }}
        KUBERNETES_VERSION: ${{ github.event.inputs.kubernetes_version || 'v1.33' }}
        POD_SUBNET: ${{ github.event.inputs.pod_subnet || '10.244.64.0/18' }}
        SERVICE_SUBNET: ${{ github.event.inputs.service_subnet || '10.244.0.0/20' }}
      run: |
        sudo -E ./scripts/build-rpi5-image.sh
        
    - name: Compress image
      run: |
        cd /build/image
        sudo xz -9 -T 0 *.img
        
    - name: Calculate checksums
      run: |
        cd /build/image
        sudo sha256sum *.img.xz > SHA256SUMS
        
    - name: Upload image artifact
      uses: actions/upload-artifact@v4
      with:
        name: rpi5-debian-image-${{ github.run_number }}
        path: |
          /build/image/*.img.xz
          /build/image/SHA256SUMS
        retention-days: 30
        
    - name: Create release (on main branch)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: Raspberry Pi 5 Debian Image v${{ github.run_number }}
        body: |
          Automated build of Raspberry Pi 5 Debian ${{ env.DEBIAN_RELEASE }} image with Kubernetes ${{ github.event.inputs.kubernetes_version || 'v1.33' }}.
          
          **Image Details:**
          - Base: Debian ${{ env.DEBIAN_RELEASE }} ARM64
          - Kubernetes: ${{ github.event.inputs.kubernetes_version || 'v1.33' }}
          - Container Runtime: CRI-O
          - Pod Subnet: ${{ github.event.inputs.pod_subnet || '10.244.64.0/18' }}
          - Service Subnet: ${{ github.event.inputs.service_subnet || '10.244.0.0/20' }}
          
          **Usage:**
          1. Download and decompress the image
          2. Use the configure script to set hostname and SSH key
          3. Flash to microSD/USB/NVMe storage
          4. Boot your Raspberry Pi 5
        files: |
          /build/image/*.img.xz
          /build/image/SHA256SUMS
        draft: false
        prerelease: false