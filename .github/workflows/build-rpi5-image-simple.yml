name: Build Raspberry Pi 5 Debian Image (Simple Cross-Compilation)

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Name for the output image'
        required: false
        default: 'rpi5-k8s-debian-simple'
      kubernetes_version:
        description: 'Kubernetes version to install'
        required: false
        default: 'v1.33'
      pod_subnet:
        description: 'CIDR for Kubernetes pod network'
        required: false
        default: '10.244.64.0/18'
      service_subnet:
        description: 'CIDR for Kubernetes service network'
        required: false
        default: '10.244.0.0/20'

env:
  IMAGE_SIZE: "4G"
  DEBIAN_RELEASE: "bookworm"
  DEBIAN_MIRROR: "http://deb.debian.org/debian"
  RPI_FIRMWARE_REPO: "https://github.com/raspberrypi/firmware.git"

jobs:
  build-image:
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Free up disk space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        df -h
        
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          coreutils quilt parted qemu-user-static debootstrap zerofree zip \
          dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file \
          git curl bc gpg pigz xxd arch-test bmap-tools fdisk kpartx \
          binfmt-support systemd-container \
          gcc-aarch64-linux-gnu libc6-dev-arm64-cross
          
    - name: Simple QEMU setup with multiarch container
      run: |
        # Use the well-tested multiarch QEMU setup
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        
        # Verify QEMU is available
        ls -la /usr/bin/qemu-aarch64-static
        /usr/bin/qemu-aarch64-static --version
        
        # Test cross-compilation works
        echo 'int main(){return 0;}' | aarch64-linux-gnu-gcc -x c -o /tmp/test_cross -
        file /tmp/test_cross
        echo "âœ“ Cross-compilation setup complete"
        
        # Show binfmt status (informational)
        echo "=== binfmt status ==="
        ls /proc/sys/fs/binfmt_misc/ 2>/dev/null || echo "binfmt_misc not accessible"
        
    - name: Create build environment
      run: |
        sudo mkdir -p /build/{image,mnt,firmware}
        sudo chown -R $USER:$USER /build
        
    - name: Download Raspberry Pi firmware
      run: |
        cd /build/firmware
        git clone --depth 1 ${{ env.RPI_FIRMWARE_REPO }} .
        
    - name: Build Debian image with simplified cross-compilation
      env:
        IMAGE_NAME: ${{ github.event.inputs.image_name || 'rpi5-k8s-debian-simple' }}
        KUBERNETES_VERSION: ${{ github.event.inputs.kubernetes_version || 'v1.33' }}
        POD_SUBNET: ${{ github.event.inputs.pod_subnet || '10.244.64.0/18' }}
        SERVICE_SUBNET: ${{ github.event.inputs.service_subnet || '10.244.0.0/20' }}
      run: |
        sudo -E ./scripts/build-rpi5-simple.sh
        
    - name: Compress image
      run: |
        cd /build/image
        xz -9 -T3 -c rpi5-k8s-debian-simple.img > rpi5-k8s-debian-simple.img.xz
        
    - name: Calculate checksums
      run: |
        cd /build/image
        sha256sum *.img.xz > SHA256SUMS
        cat SHA256SUMS
        
    - name: Upload image artifact
      uses: actions/upload-artifact@v4
      with:
        name: rpi5-debian-image-simple-${{ github.run_number }}
        path: |
          /build/image/*.img.xz
          /build/image/SHA256SUMS
        retention-days: 30
